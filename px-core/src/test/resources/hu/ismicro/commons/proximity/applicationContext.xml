<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
	Default Proximity webapp configuration with provided all possible settings (most of
	them have default values!).
	
	Have fun,
	cservenak@is-micro.hu
-->

<beans>

	<!--
		=================================================================================
		Infrastructure, Spring convenience stuff, not Proximity beans.
	-->

	<!-- 
		- Message source
	-->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<!-- 
		- Property configurer, see proximity.properties
	-->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/hu/ismicro/commons/proximity/proximity.properties</value>
			</list>
		</property>
	</bean>

	<!--
		=================================================================================
		Proximity
	-->
	<!--
		- Central proximity bean with list of repos and it's helpers.
	-->
	<bean id="proximity"
		class="hu.ismicro.commons.proximity.base.ProximityImpl"
		init-method="initialize">
		<property name="indexer" ref="indexer" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="accessManager" ref="openAccessManager" />

		<property name="repositories">
			<list>
				<!-- Repos'es will be processed in THIS ORDER! -->
				<ref local="inhouse" />
				<ref local="extFree" />
				<ref local="extNonFree" />
				<!-- Uncomment the needed repositories! -->
				<!-- for Maven2 -->
				<ref local="central" />
				<!-- for Maven1 -->
				<!--
					<ref local="ibiblio"/>
					<ref local="codehaus"/>
				-->
			</list>
		</property>

	</bean>

	<!--
		- Indexer, used to speed up searches.
	-->
	<bean id="indexer"
		class="hu.ismicro.commons.proximity.base.indexer.LuceneIndexer">
		<property name="indexDirectory" value="${indexer.dir}" />
		<property name="recreateIndexes" value="true" />
	</bean>

	<!--
		- StatisticsGatherer, gathers statistics. Simple in-memory implementation.
	-->
	<bean id="stats"
		class="hu.ismicro.commons.proximity.base.SimpleStatisticsGathererImpl" />

	<!--
		- AccessManager. With OpenAccessManager Proximity is wide open.
	-->
	<bean id="openAccessManager"
		class="hu.ismicro.commons.proximity.access.OpenAccessManager" />

	<!--
		=================================================================================
	-->
	<!--
		- Logic used for Maven1 repositories.
	-->
	<bean id="maven1logic"
		class="hu.ismicro.commons.proximity.base.logic.MavenProxyLogic">
		<property name="itemExpirationPeriodInSeconds" value="-1" />
		<property name="snapshotExpirationPeriodInSeconds"
			value="86400" />
	</bean>

	<!--
		- Logic used for Maven2 repositories.
	-->
	<bean id="maven2logic"
		class="hu.ismicro.commons.proximity.base.logic.MavenProxyLogic">
		<property name="itemExpirationPeriodInSeconds" value="-1" />
		<property name="pomExpirationPeriodInSeconds" value="86400" />
		<property name="snapshotExpirationPeriodInSeconds"
			value="86400" />
		<property name="metadataExpirationPeriodInSeconds"
			value="86400" />
	</bean>

	<!--
		- MAVEN2 repository!
		- repo1.maven.org Central Repository (with writable cache storage and remote peer)
		- A standard maven2 repository.
	-->
	<bean id="central"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="central" />
		<property name="localStorage" ref="centralFSStorage" />
		<property name="remoteStorage" ref="centralRemotePeer" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="listable" value="true" />
		<property name="accessManager" ref="openAccessManager" />
		<property name="repositoryLogic" ref="maven2logic" />
	</bean>

	<bean id="centralFSStorage"
		class="hu.ismicro.commons.proximity.base.local.WritableFileSystemStorage">
		<property name="baseDir" value="${centralFSStorage.baseDir}" />
		<property name="metadataAware" value="true" />
		<property name="metadataPrefix" value="metadata" />
		<property name="storagePrefix" value="storage" />
	</bean>

	<bean id="centralRemotePeer"
		class="hu.ismicro.commons.proximity.base.remote.HttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://repo1.maven.org/maven2/" />
		<property name="connectionTimeout" value="10000" />
		<property name="queryString" value="" />
		<property name="followRedirection" value="true" />
	</bean>

	<!--
		- MAVEN1
		- IBIBLIO Repository (with writable cache storage and remote peer)
		- A standard maven1 repository.
	-->
	<bean id="ibiblio"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="ibiblio" />
		<property name="localStorage" ref="ibiblioFSStorage" />
		<property name="remoteStorage" ref="ibiblioRemotePeer" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="listable" value="true" />
		<property name="accessManager" ref="openAccessManager" />
		<property name="repositoryLogic" ref="maven1logic" />
	</bean>

	<bean id="ibiblioFSStorage"
		class="hu.ismicro.commons.proximity.base.local.WritableFileSystemStorage">
		<property name="baseDir" value="${ibiblioFSStorage.baseDir}" />
		<property name="metadataAware" value="true" />
		<property name="metadataPrefix" value="metadata" />
		<property name="storagePrefix" value="storage" />
	</bean>

	<bean id="ibiblioRemotePeer"
		class="hu.ismicro.commons.proximity.base.remote.HttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://www.ibiblio.org/maven2/" />
		<property name="connectionTimeout" value="10000" />
		<property name="queryString" value="" />
		<property name="followRedirection" value="true" />
	</bean>


	<!--
		- MAVEN1!
		- Codehaus Repository (with writable storage and remote peer)
		- A standard maven1 repository.
	-->
	<bean id="codehaus"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="codehaus" />
		<property name="localStorage" ref="codehausFSStorage" />
		<property name="remoteStorage" ref="codehausRemotePeer" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="listable" value="true" />
		<property name="accessManager" ref="openAccessManager" />
		<property name="repositoryLogic" ref="maven1logic" />
	</bean>

	<bean id="codehausFSStorage"
		class="hu.ismicro.commons.proximity.base.local.WritableFileSystemStorage">
		<property name="baseDir" value="${codehausFSStorage.baseDir}" />
		<property name="metadataAware" value="true" />
		<property name="metadataPrefix" value="metadata" />
		<property name="storagePrefix" value="storage" />
	</bean>

	<bean id="codehausRemotePeer"
		class="hu.ismicro.commons.proximity.base.remote.HttpClientRemotePeer">
		<property name="remoteUrl" value="http://dist.codehaus.org/" />
		<property name="connectionTimeout" value="10000" />
		<property name="queryString" value="" />
		<property name="followRedirection" value="true" />
	</bean>

	<!--
		- In-House Repository (with read-only storage and without remote peer)
		- A maven repository for publishing in-house artifacts.
	-->
	<bean id="inhouse"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="inhouse" />
		<property name="localStorage" ref="inhouseFSStorage" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="listable" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="accessManager" ref="openAccessManager" />
	</bean>

	<bean id="inhouseFSStorage"
		class="hu.ismicro.commons.proximity.base.local.ReadOnlyFileSystemStorage">
		<property name="baseDir" value="${inhouseFSStorage.baseDir}" />
		<property name="metadataAware" value="false" />
	</bean>

	<!--
		- EXT NonFree Repository (with read-only storage and without remote peer)
		- A maven repository for in-house use for publishing non-free artifacts 
		- not deployed on standard maven repositories (oracle JDBC, J2EE, etc...).
	-->
	<bean id="extNonFree"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="extNonFree" />
		<property name="localStorage" ref="extNonFreeFSStorage" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="listable" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="accessManager" ref="openAccessManager" />
	</bean>

	<bean id="extNonFreeFSStorage"
		class="hu.ismicro.commons.proximity.base.local.ReadOnlyFileSystemStorage">
		<property name="baseDir" value="${extNonFreeFSStorage.baseDir}" />
		<property name="metadataAware" value="false" />
	</bean>

	<!--
		- EXT Free Repository (with read-only storage and without remote peer)
		- A maven repository for in-house use for publishing artifacts 
		- not deployed on standard maven repositories (dwr, etc...).
	-->
	<bean id="extFree"
		class="hu.ismicro.commons.proximity.base.RepositoryImpl">
		<property name="id" value="extFree" />
		<property name="localStorage" ref="extFreeFSStorage" />
		<property name="indexer" ref="indexer" />
		<property name="reindex" value="true" />
		<property name="recreateMetadata" value="true" />
		<property name="listable" value="true" />
		<property name="statisticsGatherer" ref="stats" />
		<property name="accessManager" ref="openAccessManager" />
	</bean>

	<bean id="extFreeFSStorage"
		class="hu.ismicro.commons.proximity.base.local.ReadOnlyFileSystemStorage">
		<property name="baseDir" value="${extFreeFSStorage.baseDir}" />
		<property name="metadataAware" value="false" />
	</bean>

</beans>