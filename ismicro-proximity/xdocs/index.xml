<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="cservenak@is-micro.hu">CSERVENAK, Tamas</author>
    <title>ISmicro Projects</title>
  </properties>

  <meta name="keyword" content="ismicro java"/>

<body>

<section name="Proximity">

<p>Proximity is a proxy-like pure Java application.</p>

<p>Proximity consists of PX Core module, which is the "headless" Proximity 
itself made<b>environment and transport independent</b>, so it is capable to 
run in J2SE and J2EE environment too.</p>

<p>The PX Webapp is a thin J2EE Webapp (2 controller classes + some Velocity 
templates!) built upon Spring IoC framework and it's MVC implementation, and 
makes the Proximity Servlet implementation.</p>

<subsection name="Using Proximity as corporate Maven proxy">
<p>The initial goal to develop Proximity was to make some alternative to
the existing <a href="http://maven-proxy.codehaus.org">maven-proxy</a> 
application on Codehaus.</p>

<p>The Proximity has the following features, that enables it to act as
Maven-aware caching proxy:</p>

<ul>
<li>With extensible proxying logic it is able to handle maven artifacts in 
"maven-way" (there is a Maven 1 and Maven 2 Logic implementation out-of-the-box)</li>
<li>It may (or may not) expire various artifacts in local storage downloaded from
remote peers. With Maven 1/2 Logic You have configurable timeouts for 
POMs, SNAPSHOTs and METADATAs and for all artifacts.</li>
<li>It is possible to define more remote repositories, thus Proximity is
aggregating these repositores and also is caching them thus reduces outbound
traffic (but the origin of artifact is still trackable!).</li>
<li>The flexibility to define repositories allows administrator to include
a local only repository to publish in-house artifacts, or other commercial
artifacts that are not uploadable onto ibiblio.org or other mainstream Maven repo.</li>
</ul>

<p>In contrast to the maven-proxy implementation:</p>
<ul>
<li>Proximity is <b>not</b> Maven1/2 proxy only. Simply, it is a general solution 
that works great with Maven1/2 too, but have other usages. Proximity-Core is 
used in Generic Update Server (a commercial project) development too. </li>
<li>Proximity Core is transport and environment independent (no javax.* deps) and
is embeddable in any environment (one example is PX Webapp + Spring).</li>
<li>More flexible, see <a href="configuration.html">configuration</a>.</li>
<li>Out-of-the-box able to differentiate Maven1/2 Snapshots, Maven2 metadata
and POMs and set expiration on them  by type or refetch them always.</li>
<li>Metadata aware storage, to "decorate" downloaded items with custom
"metadata" key-value pairs used for processing or tagging.</li>
<li>Flexible logic implementations. Different repos may have different retrieval
logic, as per Repository configuration allows (as per logic, as per timeouting and 
other configuration).</li>
<li>It <b>supports Access Level security</b> on Proximity level and per Repository
level. This opens interesting possibilities in corporate environments, like
General Proximity Access filtering by Proximity AccessManager and artifact level filtering
by Repository AccessManager. Just implement the AccessManager interface, inject it
to Proximity bean or Repository bean and you got Access Control (per default Proximity
is "wide-open").</li>
<li>Repositories may be "prefixed". You may prefix some repository, eg.
map complete ibiblio repository onto /someprefix Proximity
URI. This way you may host multiple remote peers cleanly separated by URI (prefix 
Maven reposes with /maven and prefix my-app with /myapp).</li>
<li>Repositories may be "hidden". Thus, artifacts within them accessed by complete 
URL will be available (as Maven does when gets and artifact), but the repository 
will not be shown on repository browsing.</li>
<li>Uses <b>Apache Lucene</b> as a search engine for cached items.</li>
<li>Not fighting against WAR deployment (Sincerely, I need WAR, since one Tomcat
already runs in my office).</li>
</ul>

</subsection>

<subsection name="Project reports">
<p>Navigate with links on the left to examine current project status, various project reports
and latest changes.</p>
</subsection>

</section>

</body>
</document>
