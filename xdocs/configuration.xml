<?xml version="1.0" encoding="UTF-8"?>

<document>

  <properties>
    <author email="cservenak@is-micro.hu">CSERVENAK, Tamas</author>
    <title>ISmicro Projects</title>
  </properties>

  <meta name="keyword" content="ismicro java"/>

<body>

<section name="Proximity Configuration">

<p>Proximity is made up from the following components:</p>

<ul>
<li><b>Proximity</b> - handles one or more repository. The order of the
configured repositories is important.</li>
<li><b>Repository</b> - may have storage and remote peer defined. It have
also pluggable logic to orhestrate the retrieval.</li>
<li><b>Storage</b> - a generic interface, which covers all kind a storage.
It may be local or remote, with any kind of underlying protocol (FTP, NFS, HTTP, etc)</li>
<li><b>RemotePeer</b> - a storage subinterface, which covers all kind a 
remote-storage. It may be kind of underlying protocol (FTP, NFS, HTTP, etc), but
Repository KNOWS it is REMOTE.</li>
<li><b>RepositoryRetrievalLogic</b> - orchestrates the retrieval.</li>
</ul>

<subsection name="Proximity">

<p>Handles one or more repository. The simple and clean implementation, using
first-got is served, thus the order of configured repositories is important.
It simply aggregates the output (in case of listing) of multiple repositories
into one output.</p>

</subsection>

<subsection name="Repository">

<p>A simple junction of three things: storage, remote peer and logic. A repository
may have only local storage (eg. offering in-house artifacts), or just a remote
peer (acts in proximity's aggregation, simplifies developer side configuration) or
may have both. If the storage is writable, it will act as caching proxy.</p>

</subsection>

<subsection name="Storage">

<p>A storage is a "local" (altough transport protocol is bot bounded in any way).
It may be writable (WritableStorage), thus a repository may have write access to
it.</p>

</subsection>

<subsection name="Remote Peer">

<p>A remote peer is a storage that is remote. Like the Ibiblio repository. There
is one implementation using Jakarta Commons HttpClient, but the transport protocol
is not bounded in any way. The remote peer may be writable (WritableRemotePeer)
and may be used to publish artifacts (TODO).</p>

</subsection>

</section>

<section name="A simple case: ISmicro">

<p>Briefly, we have Proximity configured with five repositories (in this order):</p>

<ol>
<li>ismicro - in-house artifacts,</li>
<li>extNonFree - Oracle JDBC, J2EE stuff,</li>
<li>extFree - stuff not (yet?) found on ibiblio and other places, like DWR</li>
<li>ibiblio - official repo, </li>
<li>codehaus - codehaus repo.</li>
</ol>

<p>Our configuration of Proximity as Maven proxy follows (infrastructure
from Spring config omitted):</p>

<source>
<![CDATA[
    <!--
      - Central proximity bean and it's helper.
    -->
	<bean id="proximity" class="hu.ismicro.commons.proximity.base.ProximityImpl">
		<property name="repositories">
			<list>
				<ref local="ismicro"/>
				<ref local="extNonFree"/>
				<ref local="extFree"/>
				<ref local="ibiblio"/>
				<ref local="codehaus"/>
			</list>
		</property>
	</bean>

	<bean id="proximitySupport" class="hu.ismicro.commons.proximity.base.ProximitySupportImpl">
		<property name="proximity" ref="proximity"/>
	</bean>

    <!--
      - IBIBLIO Repository (with writable storage and remote peer)
      - A standard maven repository.
    -->
	<bean id="ibiblio" class="hu.ismicro.commons.proximity.base.SimpleRepository">
		<property name="name" value="www-ibiblio-org"/>
		<property name="writableStorage" ref="ibiblioFSStorage"/>
		<property name="remotePeer" ref="ibiblioRemotePeer"/>
		<property name="repositoryRetrievalLogic">
			<bean class="hu.ismicro.commons.proximity.logic.MavenSnapshotAwareLocalLookupRemoteLookupLocalStoreRetrievalLogic"/>
		</property>
	</bean>

	<bean id="ibiblioFSStorage" class="hu.ismicro.commons.proximity.storage.WritableFileSystemStorage">
		<property name="baseDir" value="${ibiblioFSStorage.baseDir}"/>
		<property name="storeMetadata" value="true"/>
	</bean>
	
	<bean id="ibiblioRemotePeer" class="hu.ismicro.commons.proximity.remote.HttpClientRemotePeer">
		<property name="remoteUrl" value="http://www.ibiblio.org/maven/"/>
		<property name="connectionTimeout" value="30000"/>
	</bean>

    <!--
      - Codehaus Repository (with writable storage and remote peer)
      - A standard maven repository.
    -->
	<bean id="codehaus" class="hu.ismicro.commons.proximity.base.SimpleRepository">
		<property name="name" value="dist-codehaus-org"/>
		<property name="writableStorage" ref="codehausFSStorage"/>
		<property name="remotePeer" ref="codehausRemotePeer"/>
		<property name="repositoryRetrievalLogic">
			<bean class="hu.ismicro.commons.proximity.logic.MavenSnapshotAwareLocalLookupRemoteLookupLocalStoreRetrievalLogic"/>
		</property>
	</bean>

	<bean id="codehausFSStorage" class="hu.ismicro.commons.proximity.storage.WritableFileSystemStorage">
		<property name="baseDir" value="${codehausFSStorage.baseDir}"/>
		<property name="storeMetadata" value="true"/>
	</bean>
	
	<bean id="codehausRemotePeer" class="hu.ismicro.commons.proximity.remote.HttpClientRemotePeer">
		<property name="remoteUrl" value="http://dist.codehaus.org/"/>
		<property name="connectionTimeout" value="30000"/>
	</bean>

    <!--
      - ISMicro Repository (with read-only storage and without remote peer)
      - A maven repository for publishing in-house artifacts.
    -->
	<bean id="ismicro" class="hu.ismicro.commons.proximity.base.SimpleRepository">
		<property name="name" value="ISmicro Local"/>
		<property name="storage" ref="ismicroFSStorage"/>
	</bean>

	<bean id="ismicroFSStorage" class="hu.ismicro.commons.proximity.storage.FileSystemStorage">
		<property name="baseDir" value="${ismicroFSStorage.baseDir}"/>
	</bean>

    <!--
      - EXT NonFree Repository (with read-only storage and without remote peer)
      - A maven repository for in-house use for publishing non-free artifacts 
      - not deployed on standard maven repositories (oracle JDBC, J2EE, etc...).
    -->
	<bean id="extNonFree" class="hu.ismicro.commons.proximity.base.SimpleRepository">
		<property name="name" value="External NonFree"/>
		<property name="storage" ref="extNonFreeFSStorage"/>
	</bean>

	<bean id="extNonFreeFSStorage" class="hu.ismicro.commons.proximity.storage.FileSystemStorage">
		<property name="baseDir" value="${extNonFreeFSStorage.baseDir}"/>
	</bean>

    <!--
      - EXT Free Repository (with read-only storage and without remote peer)
      - A maven repository for in-house use for publishing artifacts 
      - not deployed on standard maven repositories (dwr, etc...).
    -->
	<bean id="extFree" class="hu.ismicro.commons.proximity.base.SimpleRepository">
		<property name="name" value="External Free"/>
		<property name="storage" ref="extFreeFSStorage"/>
	</bean>

	<bean id="extFreeFSStorage" class="hu.ismicro.commons.proximity.storage.FileSystemStorage">
		<property name="baseDir" value="${extFreeFSStorage.baseDir}"/>
	</bean>
]]>
</source>

</section>

</body>
</document>
