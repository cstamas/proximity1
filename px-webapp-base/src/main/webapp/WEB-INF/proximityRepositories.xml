<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!--
		- MAVEN2 repository!
		- repo1.maven.org Central Repository (with writable cache storage and remote peer)
		- A standard maven2 repository.
	-->
	<bean id="central"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="central" />
		<property name="groupId" value="public" />
		<property name="rank" value="50" />

		<property name="localStorage" ref="centralFSStorage" />
		<property name="remoteStorage" ref="centralRemotePeer" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous accessManager declaration to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<property name="repositoryLogic" ref="proximity.maven2ReleaseRepoLogic" />
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="centralFSStorage"
		class="org.abstracthorizon.proximity.storage.local.WritableFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${centralFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${centralFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<bean id="centralRemotePeer"
		class="org.abstracthorizon.proximity.storage.remote.CommonsHttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://repo1.maven.org/maven2/" />
		<!-- The timeout of HTTP connection -->
		<property name="connectionTimeout" value="10000" />
		<!-- The count of retries (used by DefaultRetryHandler) -->
		<property name="retrievalRetryCount" value="3" />
		<!-- Should HttpClient follow redirections? (preferred!) -->
		<property name="followRedirection" value="true" />
		<!-- Fix query string appended to URL, used for ProximityPiping "repositoryId=central" -->
		<property name="queryString" value="" />
		<!-- Proxy setup, uncomment if needed
			<property name="proxyHost" value="myproxyhost.company.com" />
			<property name="proxyPort" value="8080" />
		-->
		<!-- Proxy authentication setup, uncomment if proxy needs this
			<property name="proxyUsername" value="userOnProxy" />
			<property name="proxyPassword" value="bigSecret" />
		-->
		<!-- Proxy NTLM authentication setup, uncomment if proxy needs this
			<property name="proxyNtlmDomain" value="domain to authenticate within" />
			<property name="proxyNtlmHost" value="originating hostname" />
			<property name="proxyUsername" value="userOnProxyWithoutDomainPrefix" />
			<property name="proxyPassword" value="bigSecret" />
		-->
	</bean>

	<!-- FTP remote peer if somebody need it....
		<bean id="centralRemotePeer"
		class="org.abstracthorizon.proximity.base.remote.CommonsNetFtpRemotePeer">
		<property name="remoteUrl"
		value="ftp://repo1.maven.org/pub/packages/maven2/" />
		<property name="ftpUsername" value="anonymous" />
		<property name="ftpPassword" value="someemail@somedomain.com" />
		</bean>
	-->

	<!--
		- MAVEN2 repository!
		- repo1.maven.org Central Repository (with writable cache storage and remote peer)
		- A standard maven2 repository.
	-->
	<bean id="codehaus"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="codehaus" />
		<property name="groupId" value="codehaus" />
		<property name="rank" value="60" />

		<property name="localStorage" ref="codehausFSStorage" />
		<property name="remoteStorage" ref="codehausRemotePeer" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous accessManager declaration to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<property name="repositoryLogic" ref="proximity.maven2ReleaseRepoLogic" />
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="codehausFSStorage"
		class="org.abstracthorizon.proximity.storage.local.WritableFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${codehausFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${codehausFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<bean id="codehausRemotePeer"
		class="org.abstracthorizon.proximity.storage.remote.CommonsHttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://repository.codehaus.org/" />
		<!-- The timeout of HTTP connection -->
		<property name="connectionTimeout" value="10000" />
		<!-- The count of retries (used by DefaultRetryHandler) -->
		<property name="retrievalRetryCount" value="3" />
		<!-- Should HttpClient follow redirections? (preferred!) -->
		<property name="followRedirection" value="true" />
		<!-- Fix query string appended to URL, used for ProximityPiping "repositoryId=central" -->
		<property name="queryString" value="" />
		<!-- Proxy setup, uncomment if needed
			<property name="proxyHost" value="myproxyhost.company.com" />
			<property name="proxyPort" value="8080" />
		-->
		<!-- Proxy authentication setup, uncomment if proxy needs this
			<property name="proxyUsername" value="userOnProxy" />
			<property name="proxyPassword" value="bigSecret" />
		-->
		<!-- Proxy NTLM authentication setup, uncomment if proxy needs this
			<property name="proxyNtlmDomain" value="domain to authenticate within" />
			<property name="proxyNtlmHost" value="originating hostname" />
			<property name="proxyUsername" value="userOnProxyWithoutDomainPrefix" />
			<property name="proxyPassword" value="bigSecret" />
		-->
	</bean>

	<!--
		- MAVEN2 repository!
		- "Official" Snapshot Repository (with writable cache storage and remote peer)
		- A standard maven2 repository.
	-->
	<bean id="apache.snapshot"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="apache.snapshot" />
		<property name="groupId" value="apache.snapshot" />
		<property name="rank" value="80" />

		<property name="localStorage" ref="apache.snapshotFSStorage" />
		<property name="remoteStorage" ref="apache.snapshotRemotePeer" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous accessManager declaration to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<property name="repositoryLogic" ref="proximity.maven2SnapshotRepoLogic" />
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="apache.snapshotFSStorage"
		class="org.abstracthorizon.proximity.storage.local.WritableFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${apache.snapshotFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${apache.snapshotFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<bean id="apache.snapshotRemotePeer"
		class="org.abstracthorizon.proximity.storage.remote.CommonsHttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://people.apache.org/maven-snapshot-repository/" />
		<!-- The timeout of HTTP connection -->
		<property name="connectionTimeout" value="10000" />
		<!-- The count of retries (used by DefaultRetryHandler) -->
		<property name="retrievalRetryCount" value="3" />
		<!-- Should HttpClient follow redirections? (preferred!) -->
		<property name="followRedirection" value="true" />
		<!-- Fix query string appended to URL, used for ProximityPiping "repositoryId=central" -->
		<property name="queryString" value="" />
		<!-- Proxy setup, uncomment if needed
			<property name="proxyHost" value="myproxyhost.company.com" />
			<property name="proxyPort" value="8080" />
		-->
		<!-- Proxy authentication setup, uncomment if proxy needs this
			<property name="proxyUsername" value="userOnProxy" />
			<property name="proxyPassword" value="bigSecret" />
		-->
		<!-- Proxy NTLM authentication setup, uncomment if proxy needs this
			<property name="proxyNtlmDomain" value="domain to authenticate within" />
			<property name="proxyNtlmHost" value="originating hostname" />
			<property name="proxyUsername" value="userOnProxyWithoutDomainPrefix" />
			<property name="proxyPassword" value="bigSecret" />
		-->
	</bean>

	<!--
		- MAVEN2 repository!
		- "Official" Snapshot Repository (with writable cache storage and remote peer)
		- A standard maven2 repository.
	-->
	<bean id="codehaus.snapshot"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="codehaus.snapshot" />
		<property name="groupId" value="codehaus.snapshot" />
		<property name="rank" value="90" />

		<property name="localStorage" ref="codehaus.snapshotFSStorage" />
		<property name="remoteStorage"
			ref="codehaus.snapshotRemotePeer" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous accessManager declaration to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<property name="repositoryLogic" ref="proximity.maven2SnapshotRepoLogic" />
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="codehaus.snapshotFSStorage"
		class="org.abstracthorizon.proximity.storage.local.WritableFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${codehaus.snapshotFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${codehaus.snapshotFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<bean id="codehaus.snapshotRemotePeer"
		class="org.abstracthorizon.proximity.storage.remote.CommonsHttpClientRemotePeer">
		<property name="remoteUrl"
			value="http://snapshots.repository.codehaus.org/" />
		<!-- The timeout of HTTP connection -->
		<property name="connectionTimeout" value="10000" />
		<!-- The count of retries (used by DefaultRetryHandler) -->
		<property name="retrievalRetryCount" value="3" />
		<!-- Should HttpClient follow redirections? (preferred!) -->
		<property name="followRedirection" value="true" />
		<!-- Fix query string appended to URL, used for ProximityPiping "repositoryId=central" -->
		<property name="queryString" value="" />
		<!-- Proxy setup, uncomment if needed
			<property name="proxyHost" value="myproxyhost.company.com" />
			<property name="proxyPort" value="8080" />
		-->
		<!-- Proxy authentication setup, uncomment if proxy needs this
			<property name="proxyUsername" value="userOnProxy" />
			<property name="proxyPassword" value="bigSecret" />
		-->
		<!-- Proxy NTLM authentication setup, uncomment if proxy needs this
			<property name="proxyNtlmDomain" value="domain to authenticate within" />
			<property name="proxyNtlmHost" value="originating hostname" />
			<property name="proxyUsername" value="userOnProxyWithoutDomainPrefix" />
			<property name="proxyPassword" value="bigSecret" />
		-->
	</bean>


	<!--
		- In-House Repository (with read-only storage and without remote peer)
		- A maven repository for publishing in-house artifacts.
	-->
	<bean id="inhouse"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="inhouse" />
		<property name="groupId" value="inhouse" />
		<property name="rank" value="10" />

		<property name="localStorage" ref="inhouseFSStorage" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="repositoryLogic" ref="proximity.maven2ReleaseRepoLogic" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous row to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="inhouseFSStorage"
		class="org.abstracthorizon.proximity.storage.local.ReadOnlyFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${inhouseFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${inhouseFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<bean id="inhouse.snapshot"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="inhouse.snapshot" />
		<property name="groupId" value="inhouse.snapshot" />
		<property name="rank" value="15" />

		<property name="localStorage" ref="inhouse.snapshotFSStorage" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="repositoryLogic" ref="proximity.maven2SnapshotRepoLogic" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous row to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="inhouse.snapshotFSStorage"
		class="org.abstracthorizon.proximity.storage.local.ReadOnlyFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${inhouse.snapshotFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${inhouse.snapshotFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<!--
		- EXT NonFree Repository (with read-only storage and without remote peer)
		- A maven repository for in-house use for publishing released non-free artifacts 
		- not deployed on standard maven repositories (oracle JDBC, J2EE, etc...).
	-->
	<bean id="extNonFree"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="extNonFree" />
		<property name="groupId" value="public" />
		<property name="rank" value="35" />

		<property name="localStorage" ref="extNonFreeFSStorage" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="repositoryLogic" ref="proximity.maven2ReleaseRepoLogic" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous row to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="extNonFreeFSStorage"
		class="org.abstracthorizon.proximity.storage.local.ReadOnlyFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${extNonFreeFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${extNonFreeFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

	<!--
		- EXT Free Repository (with read-only storage and without remote peer)
		- A maven repository for in-house use for publishing released artifacts 
		- not deployed on standard maven repositories (dwr, etc...).
	-->
	<bean id="extFree"
		class="org.abstracthorizon.proximity.impl.RepositoryImpl"
		init-method="initialize">
		<property name="proximity" ref="proximity" />
		<property name="id" value="extFree" />
		<property name="groupId" value="public" />
		<property name="rank" value="25" />

		<property name="localStorage" ref="extFreeFSStorage" />
		<property name="statisticsGatherer" ref="proximity.statisticsGatherer" />
		<property name="repositoryLogic" ref="proximity.maven2ReleaseRepoLogic" />
		<property name="accessManager" ref="proximity.openAccessManager" />
		<!-- Uncomment this and delete previous row to restrict access to this repo
			<property name="accessManager" ref="internalLanOnlyAccessManager" />
		-->
		<!-- Am I listable? -->
		<property name="listable" value="true" />
		<!-- Am I available? If no, i will refuse all requests -->
		<property name="available" value="true" />
		<!-- Am I offline? If yes, i will not touch my remote peer, will serve only from localStorage -->
		<property name="offline" value="false" />
	</bean>

	<bean id="extFreeFSStorage"
		class="org.abstracthorizon.proximity.storage.local.ReadOnlyFileSystemStorage">
		<property name="metadataAware" value="true" />
		<property name="metadataDirFile"
			value="${extFreeFSStorage.metadataDir}" />
		<property name="storageDirFile"
			value="${extFreeFSStorage.baseDir}" />
		<property name="proxiedItemPropertiesFactory"
			ref="proximity.itemPropertiesFactory" />
	</bean>

</beans>